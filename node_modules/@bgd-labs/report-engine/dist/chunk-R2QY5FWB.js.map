{"version":3,"sources":["../src/fetchIRStrategy.ts","../src/renderer/reserves.ts","../src/utils/diffler.ts","../src/diffReports.ts"],"sourcesContent":["import fs from \"fs\";\nimport path from \"path\";\nimport { Readable } from \"stream\";\nimport { finished } from \"stream/promises\";\n\n/**\n * Fetches the rate image from rate-strategy explorer\n * @dev currently broken as https://github.com/foundry-rs/foundry/issues/4601 results in json numbers which will be broken inside js\n * @param {*} rate\n * @param filePath the path to store the ir to\n */\nexport async function fetchRateStrategyImage(rate, filePath) {\n  // skip in case file already exists\n  if (fs.existsSync(filePath)) return;\n  const paramsObj = {\n    variableRateSlope1: rate.variableRateSlope1,\n    variableRateSlope2: rate.variableRateSlope2,\n    stableRateSlope1: rate.stableRateSlope1,\n    stableRateSlope2: rate.stableRateSlope2,\n    optimalUsageRatio: rate.optimalUsageRatio,\n    baseVariableBorrowRate: rate.baseVariableBorrowRate,\n    baseStableBorrowRate: rate.baseStableBorrowRate,\n  };\n  const searchParams = new URLSearchParams(paramsObj);\n  const { body } = await fetch(\n    `https://rate-strategy-explorer.vercel.app/api/static?${searchParams.toString()}`\n  );\n  const fileStream = fs.createWriteStream(path.join(process.cwd(), filePath));\n  if (!body) throw Error(\"Error fetchign the image\");\n  // any cast due to some mismatch on ReadableStream node vs web\n  await finished(Readable.fromWeb(body as any).pipe(fileStream));\n}\n","import { fetchRateStrategyImage } from \"../fetchIRStrategy\";\nimport { DiffedInput, AaveV3Reserve, AaveV3Snapshot } from \"../types\";\n\nexport function renderReserves(\n  from: AaveV3Snapshot,\n  to: AaveV3Snapshot,\n  reserves: DiffedInput<AaveV3Reserve>\n): string {\n  const { added, removed, altered } = Object.entries(reserves)\n    .sort(([keyA], [keyB]) => {\n      return keyA.localeCompare(keyB, \"en-US\");\n    })\n    .reduce(\n      (acc, [key, value]) => {\n        if (value.from) {\n          acc.removed.push(value.from);\n        } else if (value.to) {\n          acc.added.push(value.to);\n        } else {\n          acc.altered.push(value);\n        }\n        return acc;\n      },\n      {\n        added: [] as AaveV3Reserve[],\n        removed: [] as AaveV3Reserve[],\n        altered: [] as {\n          [K in keyof AaveV3Reserve]?: {\n            from: AaveV3Reserve[K];\n            to: AaveV3Reserve[K];\n          };\n        }[],\n      }\n    );\n  if (!altered.length && !added.length && !removed.length) return \"\";\n  let content = \"\";\n  content += `## Reserves\\n\\n`;\n\n  if (altered.length) {\n    content += `### Reserves altered\\n\\n`;\n    for (const reserve of altered) {\n      // prepare assets\n      if (reserve.interestRateStrategy) {\n        fetchRateStrategyImage(\n          from.strategies[reserve.interestRateStrategy.from],\n          `./assets/${reserve.interestRateStrategy.from}`\n        );\n        fetchRateStrategyImage(\n          to.strategies[reserve.interestRateStrategy.to],\n          `./assets/${reserve.interestRateStrategy.to}`\n        );\n      }\n      content += `| key | value |\\n`;\n      content += `| --- | --- |\\n`;\n      Object.keys(reserve).map((key) => {\n        content += `| ${key} | ~~${reserve[key].from}~~${reserve[key].to} |\\n`;\n      });\n      content += `\\n\\n`;\n    }\n  }\n\n  if (added.length) {\n    content += `### Reserves added\\n\\n`;\n    for (const reserve of added) {\n      // prepare assets\n      if (reserve.interestRateStrategy) {\n        fetchRateStrategyImage(\n          to.strategies[reserve.interestRateStrategy],\n          `./assets/${reserve.interestRateStrategy}`\n        );\n      }\n\n      content += `| key | value |\\n`;\n      content += `| --- | --- |\\n`;\n      Object.keys(reserve).map((key) => {\n        content += `| ${key} | ${reserve[key]} |\\n`;\n      });\n      content += `\\n\\n`;\n    }\n  }\n\n  if (removed.length) {\n    content += `### Reserves added\\n\\n`;\n    for (const reserve of removed) {\n      content += `| key | value |\\n`;\n      content += `| --- | --- |\\n`;\n      Object.keys(reserve).map((key) => {\n        content += `| ${key} | ${reserve[key]} |\\n`;\n      });\n      content += `\\n\\n`;\n    }\n  }\n  return content;\n}\n","/**\n * @dev this is a modified version of the `diffler` npm package.\n * The modification adds exact types.\n * @license MIT https://github.com/omgaz/diffler\n * Author: Gary Chisholm @omgaz\n */\n\ntype SimpleJSONValue = string | number | boolean;\n\ntype OutType<A, B> = A extends SimpleJSONValue\n  ? Readonly<A> extends Readonly<B>\n    ? never\n    : { from: A; to: B }\n  : {\n      // intersecting properties\n      [K in keyof (A | B)]: Readonly<A[K]> extends Readonly<B[K]>\n        ? never\n        : OutType<Readonly<A[K]>, Readonly<B[K]>>;\n    } & {\n      // non intersecting properties only on A\n      [Y in keyof Omit<A, keyof B>]: { from: A[Y]; to: null };\n    } & {\n      // non intersecting properties only on B\n      [Z in keyof Omit<B, keyof A>]: { from: null; to: B[Z] };\n    };\n\nexport function diffler<\n  A extends Readonly<Record<string, unknown>>,\n  B extends Readonly<Record<string, unknown>>\n>(obj1: Readonly<A>, obj2: Readonly<B>): OutType<Readonly<A>, Readonly<B>> {\n  let diff = {} as OutType<Readonly<A>, Readonly<B>>;\n\n  // Iterate over obj1 looking for removals and differences in existing values\n  for (const key in obj1) {\n    if (obj1.hasOwnProperty(key) && typeof obj1[key] !== \"function\") {\n      const obj1Val = obj1[key];\n      const obj2Val = obj2[key];\n\n      if (typeof obj1Val !== typeof obj2Val) {\n        diff[key as string] = {\n          from: obj1Val,\n          to: obj2Val,\n        };\n        break;\n      }\n\n      // If property exists in obj1 and not in obj2 then it has been removed\n      if (!(key in obj2)) {\n        diff[key as string] = {\n          from: obj1Val,\n          to: null, // using null to specify that the value is empty in obj2\n        };\n      }\n\n      // If property is an object then we need to recursively go down the rabbit hole\n      else if (typeof obj1Val === \"object\") {\n        var tempDiff = diffler(\n          obj1Val as Record<string, unknown>,\n          obj2Val as Record<string, unknown>\n        );\n        if (Object.keys(tempDiff).length > 0) {\n          if (tempDiff) {\n            diff[key as string] = tempDiff;\n          }\n        }\n      }\n\n      // If property is in both obj1 and obj2 and is different\n      else if ((obj1Val as string) !== (obj2Val as string)) {\n        diff[key as string] = {\n          from: obj1Val,\n          to: obj2Val,\n        };\n      }\n    }\n  }\n\n  // Iterate over obj2 looking for any new additions\n  for (const key in obj2) {\n    if (obj2.hasOwnProperty(key) && typeof obj2[key] !== \"function\") {\n      if (obj1 === null) {\n        diff[key as string] = {\n          from: obj1,\n          to: obj2[key],\n        };\n        break;\n      }\n\n      const obj2Val = obj2[key];\n\n      if (!(key in obj1)) {\n        if (!diff) {\n          (diff as unknown) = {};\n        }\n        diff[key as string] = {\n          from: null,\n          to: obj2Val,\n        };\n      }\n    }\n  }\n\n  return diff as OutType<Readonly<A>, Readonly<B>>;\n}\n","import { renderReserves } from \"./renderer/reserves\";\nimport { AaveV3Snapshot } from \"./types\";\nimport { diffler } from \"./utils/diffler\";\n\nexport function diffReports<A extends AaveV3Snapshot, B extends AaveV3Snapshot>(\n  pre: A,\n  post: B\n) {\n  const diff = diffler(pre, post);\n  let content = renderReserves(pre, post, diff.reserves);\n\n  content += `### Raw diff\\n\\n\\`\\`\\`json\\n${JSON.stringify(\n    diff,\n    null,\n    2\n  )}\\n\\`\\`\\``;\n  return content;\n}\n"],"mappings":"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","names":[]}