import type { Abi, Narrow } from 'abitype';
import type { GetErrorArgs, InferErrorName } from '../../types/index.js';
export type EncodeErrorResultParameters<TAbi extends Abi | readonly unknown[] = Abi, TErrorName extends string = string> = {
    abi: Narrow<TAbi>;
    errorName: InferErrorName<TAbi, TErrorName>;
} & GetErrorArgs<TAbi, TErrorName>;
export declare function encodeErrorResult<TAbi extends Abi | readonly unknown[], TErrorName extends string>({ abi, errorName, args }: EncodeErrorResultParameters<TAbi, TErrorName>): `0x${string}`;
//# sourceMappingURL=encodeErrorResult.d.ts.map