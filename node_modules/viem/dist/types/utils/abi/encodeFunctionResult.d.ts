import type { Abi, Narrow } from 'abitype';
import type { InferFunctionName, ContractFunctionResult } from '../../types/index.js';
export type EncodeFunctionResultParameters<TAbi extends Abi | readonly unknown[] = Abi, TFunctionName extends string = string> = {
    abi: Narrow<TAbi>;
    functionName: InferFunctionName<TAbi, TFunctionName>;
    result?: ContractFunctionResult<TAbi, TFunctionName>;
};
export declare function encodeFunctionResult<TAbi extends Abi | readonly unknown[], TFunctionName extends string>({ abi, functionName, result, }: EncodeFunctionResultParameters<TAbi, TFunctionName>): `0x${string}`;
//# sourceMappingURL=encodeFunctionResult.d.ts.map