"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.testActions = void 0;
const index_js_1 = require("../../actions/test/index.js");
function testActions(client) {
    return {
        dropTransaction: (args) => (0, index_js_1.dropTransaction)(client, args),
        getAutomine: () => (0, index_js_1.getAutomine)(client),
        getTxpoolContent: () => (0, index_js_1.getTxpoolContent)(client),
        getTxpoolStatus: () => (0, index_js_1.getTxpoolStatus)(client),
        impersonateAccount: (args) => (0, index_js_1.impersonateAccount)(client, args),
        increaseTime: (args) => (0, index_js_1.increaseTime)(client, args),
        inspectTxpool: () => (0, index_js_1.inspectTxpool)(client),
        mine: (args) => (0, index_js_1.mine)(client, args),
        removeBlockTimestampInterval: () => (0, index_js_1.removeBlockTimestampInterval)(client),
        reset: (args) => (0, index_js_1.reset)(client, args),
        revert: (args) => (0, index_js_1.revert)(client, args),
        sendUnsignedTransaction: (args) => (0, index_js_1.sendUnsignedTransaction)(client, args),
        setAutomine: (args) => (0, index_js_1.setAutomine)(client, args),
        setBalance: (args) => (0, index_js_1.setBalance)(client, args),
        setBlockGasLimit: (args) => (0, index_js_1.setBlockGasLimit)(client, args),
        setBlockTimestampInterval: (args) => (0, index_js_1.setBlockTimestampInterval)(client, args),
        setCode: (args) => (0, index_js_1.setCode)(client, args),
        setCoinbase: (args) => (0, index_js_1.setCoinbase)(client, args),
        setIntervalMining: (args) => (0, index_js_1.setIntervalMining)(client, args),
        setLoggingEnabled: (args) => (0, index_js_1.setLoggingEnabled)(client, args),
        setMinGasPrice: (args) => (0, index_js_1.setMinGasPrice)(client, args),
        setNextBlockBaseFeePerGas: (args) => (0, index_js_1.setNextBlockBaseFeePerGas)(client, args),
        setNextBlockTimestamp: (args) => (0, index_js_1.setNextBlockTimestamp)(client, args),
        setNonce: (args) => (0, index_js_1.setNonce)(client, args),
        setRpcUrl: (args) => (0, index_js_1.setRpcUrl)(client, args),
        setStorageAt: (args) => (0, index_js_1.setStorageAt)(client, args),
        snapshot: () => (0, index_js_1.snapshot)(client),
        stopImpersonatingAccount: (args) => (0, index_js_1.stopImpersonatingAccount)(client, args),
    };
}
exports.testActions = testActions;
//# sourceMappingURL=test.js.map